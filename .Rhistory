mutate(query = if_else(query == "L11NA", "Napabucasin",
if_else(query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(query, method) %>% do(tail(., 5)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
facet_grid(method ~ query) +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview.pdf", width = 5, height = 9)
#syn_scores_qq %>% group_by(query, method) %>% do(tail(., 5))
# Chunk 51
syn_scores_qq <- syn_scores %>%
filter(!BlockID %in% fb) %>%
#filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
group_by(query, method) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = if_else(query == "L11NA", "Napabucasin",
if_else(query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(query, method) %>% do(tail(., 5)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
facet_grid(method ~ query) +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview_plusauc.pdf", width = 5, height = 9)
# Chunk 52
fb_select <- syn_scores %>%
filter(line != "D027T01") %>%
group_by(BlockID, method) %>%
summarise(n = sum(is.na(score_average))) %>%
filter(n > 0) %>%
.$BlockID
# Chunk 53
syn_scores_qq <- syn_scores %>%
filter(!BlockID %in% fb) %>%
filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug, line) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
unite(id, c("query", "line")) %>%
group_by(method, id) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = if_else(b_query == "L11NA", "Napabucasin",
if_else(b_query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview_line.pdf", width = 5, height = 5)
# Chunk 54
syn_scores_qq <- syn_scores %>%
#filter(!BlockID %in% fb) %>%
#filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(query == "L11EV") %>%
dplyr::select(-score_sd, -mu, - sd, -sc_score) %>%
drop_na() %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug, line) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
unite(id, c("query", "line")) %>%
group_by(method, id) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = if_else(b_query == "L11NA", "Napabucasin",
if_else(b_query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview_line_all_drugs.pdf", width = 7.5, height = 7.5)
# Chunk 55
coi <- c("YM155", "PRI-724", "Sunitinib")
tidy_drc_fit <- function(df){
# predictions and confidence intervals.
org.fits <- expand.grid(conc=exp(seq(log(10), log(0.016), length=1000)))
fits <- drm(data = df, pc_norm ~ conc, fct=LL.4(), na.action = na.omit) %>%
predict(., newdata = org.fits, interval = "confidence")
org.fits %>%
mutate(p = fits[,1],
pmin = fits[,2],
pmax = fits[,3],
line = df$line %>% unique(),
drug = df$drug %>% unique(),
Row = df$Row %>% unique()) %>%
full_join(df) %>%
return(.)
}
library(PharmacoGx) #cite
library(growthcurve) #cite
library(drc)
tmp_gr_all_formatted <- syn_table %>%
filter(DrugRow == "L11EV") %>%
distinct() %>%
as.tibble() %>%
#filter(DrugCol == "YM155") %>%
filter(Row %in% c(1,4)) %>%
unite(run, Row, Replicate, remove = FALSE) %>%
mutate(Row = factor(Row)) %>%
mutate(conc = ConcCol %>% as.numeric(),
pc_norm = Response,
line = line,
drug = DrugCol,
GR = Response) %>%
group_by(drug, ConcCol, Row, line) %>%
dplyr::mutate(n = n(),
GR_sd = abs(range(GR)[1] - range(GR)[2])/2,
GR = mean(GR, na.rm = TRUE))
tmp_gr_all_fit <- tmp_gr_all_formatted %>%
dplyr::select(line, drug, pc_norm, conc, Col, Row) %>%
filter(drug %in% coi) %>%
group_by(drug, line, Row) %>%
do(., tidy_drc_fit(.))
plot_dose_response_fit <- function(coi, query){
tmp_gr_all_fit %>%
left_join(tmp_gr_all_formatted) %>%
dplyr::filter(drug %in% coi) %>%
ggplot(aes(conc, GR, color = Row, group = Row)) +
geom_point(size = 2.5) +
#coord_trans(x="log") +
theme_classic() +
geom_errorbar(data = tmp_gr_all_formatted %>%
dplyr::filter(drug %in% coi),
aes(x=conc, ymin=GR-GR_sd, ymax=GR+GR_sd, group = line),
alpha=1, color = "black", width = 0.05) +
geom_hline(yintercept = 100) +
geom_hline(yintercept = 0) +
geom_line(aes(x=conc, y=p)) +
xlab("log10 concentration [uM]") +
ylab("Viability") +
ggtitle(query) +
#scale_y_continuous(limits = c(0,120)) +
scale_x_log10() +
facet_grid(drug ~ line) +
scale_color_manual(values=rev(c("#999999", "#777777", "#555555", "#333333", "#111111")[c(1,5)])) +
#theme(legend.position="none") +
ggsave(paste0(query, "_top_drugs.pdf"), width = 6, height = 5)
}
plot_dose_response_fit(coi, "Everolimus")
# Chunk 56
coi <- c("Docetaxel", "Napabucasin", "Volasertib")
tmp_gr_all_formatted <- syn_table %>%
filter(DrugRow == "L11TR") %>%
distinct() %>%
as.tibble() %>%
#filter(DrugCol == "YM155") %>%
filter(Row %in% c(1,4)) %>%
unite(run, Row, Replicate, remove = FALSE) %>%
mutate(Row = factor(Row)) %>%
mutate(conc = ConcCol %>% as.numeric(),
pc_norm = Response,
line = line,
drug = DrugCol,
GR = Response) %>%
group_by(drug, ConcCol, Row, line) %>%
dplyr::mutate(n = n(),
GR_sd = abs(range(GR)[1] - range(GR)[2])/2,
GR = mean(GR, na.rm = TRUE))
tmp_gr_all_fit <- tmp_gr_all_formatted %>%
dplyr::select(line, drug, pc_norm, conc, Col, Row) %>%
filter(drug %in% coi) %>%
group_by(drug, line, Row) %>%
do(., tidy_drc_fit(.))
plot_dose_response_fit <- function(coi, query){
tmp_gr_all_fit %>%
left_join(tmp_gr_all_formatted) %>%
dplyr::filter(drug %in% coi) %>%
ggplot(aes(conc, GR, color = Row, group = Row)) +
geom_point(size = 2.5) +
#coord_trans(x="log") +
theme_classic() +
geom_errorbar(data = tmp_gr_all_formatted %>%
dplyr::filter(drug %in% coi),
aes(x=conc, ymin=GR-GR_sd, ymax=GR+GR_sd, group = line),
alpha=1, color = "black", width = 0.05) +
geom_hline(yintercept = 100) +
geom_hline(yintercept = 0) +
geom_line(aes(x=conc, y=p)) +
xlab("log10 concentration [uM]") +
ylab("Viability") +
ggtitle(query) +
#scale_y_continuous(limits = c(0,120)) +
scale_x_log10() +
facet_grid(drug ~ line) +
scale_color_manual(values=rev(c("#999999", "#777777", "#555555", "#333333", "#111111")[c(1,5)])) +
#theme(legend.position="none") +
ggsave(paste0(query, "_top_drugs.pdf"), width = 6, height = 5)
}
plot_dose_response_fit(coi, "Trametinib")
# Chunk 57
coi <- c("Trametinib", "Sunitinib", "Gemcitabine")
tmp_gr_all_formatted <- syn_table %>%
filter(DrugRow == "L11NA") %>%
distinct() %>%
as.tibble() %>%
#filter(DrugCol == "YM155") %>%
filter(Row %in% c(1,4)) %>%
unite(run, Row, Replicate, remove = FALSE) %>%
mutate(Row = factor(Row)) %>%
mutate(conc = ConcCol %>% as.numeric(),
pc_norm = Response,
line = line,
drug = DrugCol,
GR = Response) %>%
group_by(drug, ConcCol, Row, line) %>%
dplyr::mutate(n = n(),
GR_sd = abs(range(GR)[1] - range(GR)[2])/2,
GR = mean(GR, na.rm = TRUE))
tmp_gr_all_fit <- tmp_gr_all_formatted %>%
dplyr::select(line, drug, pc_norm, conc, Col, Row) %>%
filter(drug %in% coi) %>%
group_by(drug, line, Row) %>%
do(., tidy_drc_fit(.))
plot_dose_response_fit <- function(coi, query){
tmp_gr_all_fit %>%
left_join(tmp_gr_all_formatted) %>%
dplyr::filter(drug %in% coi) %>%
ggplot(aes(conc, GR, color = Row, group = Row)) +
geom_point(size = 2.5) +
#coord_trans(x="log") +
theme_classic() +
geom_errorbar(data = tmp_gr_all_formatted %>%
dplyr::filter(drug %in% coi),
aes(x=conc, ymin=GR-GR_sd, ymax=GR+GR_sd, group = line),
alpha=1, color = "black", width = 0.05) +
geom_hline(yintercept = 100) +
geom_hline(yintercept = 0) +
geom_line(aes(x=conc, y=p)) +
xlab("log10 concentration [uM]") +
ylab("Viability") +
ggtitle(query) +
#scale_y_continuous(limits = c(0,120)) +
scale_x_log10() +
facet_grid(drug ~ line) +
scale_color_manual(values=rev(c("#999999", "#777777", "#555555", "#333333", "#111111")[c(1,5)])) +
#theme(legend.position="none") +
ggsave(paste0(query, "_top_drugs.pdf"), width = 6, height = 5)
}
plot_dose_response_fit(coi, "Napabucasin")
syn_scores
tas_syn
tas_syn %>% case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01")
tas_syn %>% mutate( line = case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01",
))
tas_syn %>% mutate( line = case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01"
))
syn_scores
tas_syn %>% mutate( line = case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01"
)) %>%
group_by(line, method) %>%
mutate(mu = mean(score_average, na.rm = TRUE),
sd = sd(score_average, na.rm = TRUE),
sc_score = (score_average-mu)/sd)
tas_syn %>% mutate( line = case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01"
)) %>%
group_by(line, method) %>%
mutate(mu = mean(score_average, na.rm = TRUE),
sd = sd(score_average, na.rm = TRUE),
sc_score = (score_average-mu)/sd) %>% View
fb
syn_scores %>%
filter(!BlockID %in% fb) %>%
dplyr::select(-score_sd) %>%
spread(method, score_average) %>%
tidyr::unite(id, BlockID, line, Replicate, sep = "_") %>%
as.data.frame() %>%
column_to_rownames("id") %>%
corrr::correlate(method = "spearman")
syn_scores
syn_scores %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
mutate(query = if_else(query == "L11NA", "Napabucasin",
if_else(query == "L11TR", "Trametinib", "Everolimus"))) %>%
#filter(!BlockID %in% fb) %>%
ggplot(aes(sc_score, stat(count), fill = line)) +
geom_density(alpha = 0.7) +
theme_bw() +
scale_fill_manual(values = c("#A9A9A9", "#696969")) +
facet_grid(query ~ method)
syn_scores_qq <- syn_scores %>%
filter(!BlockID %in% fb) %>%
filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug, line) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
unite(id, c("query", "line")) %>%
group_by(method, id) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = if_else(b_query == "L11NA", "Napabucasin",
if_else(b_query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" )
syn_scores_qq <- syn_scores %>%
#filter(!BlockID %in% fb) %>%
#filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(query == "L11EV") %>%
dplyr::select(-score_sd, -mu, - sd, -sc_score) %>%
drop_na() %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug, line) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
unite(id, c("query", "line")) %>%
group_by(method, id) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = if_else(b_query == "L11NA", "Napabucasin",
if_else(b_query == "L11TR", "Trametinib", "Everolimus")))
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" )
syn_scores_combined <- rbind(syn_scores, tas_syn)
syn_scores
tas_syn <- tas_syn %>% mutate( line = case_when(line == "07" ~ "D007T01",
line == "19" ~ "D019T01",
line == "27" ~ "D027T01"
)) %>%
group_by(line, method) %>%
mutate(mu = mean(score_average, na.rm = TRUE),
sd = sd(score_average, na.rm = TRUE),
sc_score = (score_average-mu)/sd)
syn_scores_combined <- rbind(syn_scores, tas_syn)
syn_scores_combined
tas_syn
syn_scores_qq <- syn_scores_combined %>%
#filter(!BlockID %in% fb) %>%
#filter(method != "DeltaAUC") %>%
#I overwrite my variable name to match the function
mutate(score_average = sc_score) %>%
separate(BlockID, c("query", "drug"), remove = FALSE, sep = "_") %>%
#filter(query == "L11EV") %>%
dplyr::select(-score_sd, -mu, - sd, -sc_score) %>%
drop_na() %>%
#filter(method == "ZIP") %>%
#filter(grepl(pattern = "L11NA", BlockID)) %>%
group_by(BlockID, method, query, drug, line) %>%
summarise(score_average = mean(score_average)) %>%
ungroup() %>%
unite(id, c("query", "line")) %>%
group_by(method, id) %>%
do(tidy_qqplot(.)) %>%
separate(BlockID, c("b_query", "b_drug"), remove = FALSE, sep = "_") %>%
ungroup() %>%
mutate(query = case_when(b_query == "L11NA" ~ "Napabucasin",
b_query == "L11TR" ~ "Trametinib",
b_query == "L11EV" ~ "Everolimus",
b_query == "TAS-102" ~ "TAS-102"))
syn_scores_qq
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview_line_all_drugs_tas.pdf", width = 7.5, height = 7.5)
syn_scores_qq %>%
ggplot(aes(theoretical,sample,label=b_drug)) +
geom_point()+
geom_smooth(data = syn_scores_qq %>% filter(abs(theoretical) < 1.45), method = "lm", fullrange = TRUE, se = FALSE, color = "black", size = .5) +
geom_text_repel(data = syn_scores_qq %>% group_by(id, method) %>% do(tail(., 4)),
size = 2, segment.size = 0.3,
point.padding = .5) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
facet_grid(method ~ id) +
geom_hline(yintercept = 2, linetype="dashed") +
geom_rug(sides = "l", size = 0.2) +
labs(y = "measured synergy score",
x = "theoretical distribution" ) +
ggsave("qq_overview_line_all_drugs_tas.pdf", width = 9.5, height = 7.5)
syn_scores_qq
syn_scores_combined
syn_scores_combined %>%
filter(sc_score > 2)
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score)
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score) %>%
group_by(BlockID, method) %>%
mutate(n_line = n())
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score) %>%
group_by(BlockID, method) %>%
summarise(n_line = n())
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score) %>%
group_by(BlockID) %>%
summarise(n= n())
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score) %>%
group_by(BlockID) %>%
summarise(n= n()) %>%
arrange(desc(n))
syn_scores_combined %>%
filter(sc_score > 2) %>%
dplyr::select(BlockID:line, sc_score) %>%
group_by(BlockID) %>%
summarise(n= n()) %>%
arrange(desc(n)) %>%
write.csv("top_synergy_pairs.csv")
