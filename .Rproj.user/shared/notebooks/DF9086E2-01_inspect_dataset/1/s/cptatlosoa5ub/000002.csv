"0","## split data by plate and apply loess normalization"
"0","ctg_loess <- ctg_data %>% dplyr::select(row_num, col_num, pcount, id) %>% "
"0","  # na values"
"0","  drop_na() %>%"
"0","  #set the ctrl column 13 to NA"
"0","  #mutate(pcount = ifelse(col_num == 13, NA, pcount)) %>%"
"0","  split(.$id) %>% lapply(function(s){"
"0","  ## loess fit. family is 'symmetric' to be robust to outliers"
"0","  fit <- loess(pcount ~ row_num + col_num, data=s, family='symmetric')"
"0","  ## apply normalization"
"0","  tibble(norm_fac = fit$fitted) %>% cbind(s %>% drop_na(),.) %>% "
"0","    mutate(pcount_norm = pcount - (norm_fac - median(norm_fac)))"
"0","}) %>% bind_rows() %>% full_join(ctg_data)"
