{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"syn_mat_low %>% group_by(line, Replicate, BlockID) %>% do(tidy_synergy(df = ., \n    me = c(\"ZIP\", \"HSA\", \"Bliss\", \"Loewe\"))) %>% ungroup() %>% \n    mutate(method = as.factor(method), line = as.factor(line)) %>% \n    complete(BlockID, method, Replicate, line) %>% mutate(score_average = ifelse(is.nan(score_average),  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[i]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"do(., tidy_synergy(df = ., me = c(\"ZIP\", \"HSA\", \"Bliss\", \"Loewe\")))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"do.grouped_df(., tidy_synergy(df = ., me = c(\"ZIP\", \"HSA\", \"Bliss\", \n    \"Loewe\")))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"overscope_eval_next(overscope, args[[j]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tidy_synergy(df = ., me = c(\"ZIP\", \"HSA\", \"Bliss\", \"Loewe\"))","line_number":0},{"character_number":34,"end_character_number":17,"end_line_number":13,"file":"","func":"lapply(as.list(me), function(m, f = df) {\n    return(tryCatch(f %>% ReshapeData(., data.type = \"viability\") %>% \n        CalculateSynergy(method = m, correction = TRUE) %>% tibble(BlockID = .$drug.pairs %>% \n        simplify() %>% .[4], method = .$method, score_average = .$scores %>%  ...","line_number":1},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(lhs, parent, parent)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(lhs, parent, parent)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(as.list(me), function(m, f = df) {\n    return(tryCatch(f %>% ReshapeData(., data.type = \"viability\") %>% \n        CalculateSynergy(method = m, correction = TRUE) %>% tibble(BlockID = .$drug.pairs %>% \n        simplify() %>% .[4], method = .$method, score_average = .$scores %>%  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":3,"end_character_number":28,"end_line_number":12,"file":"","func":"tryCatch(f %>% ReshapeData(., data.type = \"viability\") %>% CalculateSynergy(method = m, \n    correction = TRUE) %>% tibble(BlockID = .$drug.pairs %>% \n    simplify() %>% .[4], method = .$method, score_average = .$scores %>% \n    .[[1]] %>% .[-1, -1] %>% simplify() %>% mean(), score_sd = .$scores %>%  ...","line_number":3},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":3,"end_character_number":28,"end_line_number":12,"file":"","func":"f %>% ReshapeData(., data.type = \"viability\") %>% CalculateSynergy(method = m, \n    correction = TRUE) %>% tibble(BlockID = .$drug.pairs %>% \n    simplify() %>% .[4], method = .$method, score_average = .$scores %>% \n    .[[1]] %>% .[-1, -1] %>% simplify() %>% mean(), score_sd = .$scores %>%  ...","line_number":3},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[i]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"CalculateSynergy(., method = m, correction = TRUE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Loewe(response.mat, correction, Emin = Emin, Emax = Emax, nan.handle)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"nleqslv(max(drug.col.par[2] + 1, drug.row.par[2] + 1), eq, method = \"Newton\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tolower(tmp)","line_number":0}],"message":"Error in chol.default(scaledH) : \n  the leading minor of order 1 is not positive definite\n"}