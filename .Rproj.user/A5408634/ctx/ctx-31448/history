facet_grid(line ~ date) +
theme_bw()
# ctg_loess %>%
#   mutate(line_date_exp = paste0(line, "_", date)) %>%
#   filter(drug %in% coi) %>%
#   filter(combination == TRUE) %>%
#   ggplot(aes(id, pcount_norm, color = drug)) +
#   #geom_violin(aes(group = drug)) +
#   geom_boxplot(alpha = 0.7) +
#   #facet_grid(line_date_exp ~ Library) +
#   #facet_wrap(~line) +
#   theme_classic()
# Chunk 12
z_df <- ctg_loess %>%
filter(drug %in% coi) %>%
group_by(id, drug, combination, Library, line, date, experiment) %>%
summarise(sd = sd(pcount_norm, na.rm = TRUE),
mean = mean(pcount_norm, na.rm = TRUE)) %>%
group_by(id, combination, Library, line, date, experiment) %>%
summarise(zfactor = 1-((3*sum(sd))/abs(range(mean)[1]-range(mean)[2]))) %>%
mutate(qc = if_else(zfactor < 0.25, FALSE, TRUE))
z_df %>%
mutate(query = substr(Library, 1, 5),
query_conc = substr(Library, 6, 6)) %>%
filter(combination != TRUE) %>%
arrange(zfactor) %>%
ungroup() %>%
mutate(id = factor(id, levels = id)) %>%
ggplot(aes(id, zfactor)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_y_continuous(limits = c(0,1)) +
coord_flip()
# z_df_anno <- z_df %>% ungroup%>% mutate(id = paste0(id, "_", combination)) %>%
#   dplyr::select(-experiment, -zfactor) %>%
#   as.data.frame() %>%
#   remove_rownames() %>%
#   column_to_rownames("id")
#
# z_df %>% ungroup%>% mutate(id = paste0(id, "_", combination)) %>% dplyr::select(id, zfactor) %>%
#   arrange(zfactor) %>%
#   as.data.frame() %>%
#   remove_rownames() %>%
#   column_to_rownames("id") %>%
#   pheatmap(., cluster_cols = FALSE, annotation_row =  z_df_anno)
# Chunk 13
coi <- c("DMSO", "Staurosporine")
ctg_loess %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, pcount_norm)) +
geom_boxplot(aes(colour = drug), width =.2, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.y=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggsave("collab_ctrls_raw_byplate_uncombined.pdf", width = 6, height = 4)
# cor(use = "complete.obs")
# pheatmap()
# Chunk 14
r <- ctg_loess %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, pcount_norm, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, pcount_norm) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
dplyr::select(rep1, rep2) %>%
as.matrix() %>%
cor() %>%
.["rep1", "rep2"]
ctg_loess %>%
#filter(col_num != 13) %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, pcount_norm, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, pcount_norm) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
ggplot(aes(rep1, rep2)) +
geom_point(alpha = 0.2) +
#geom_point(alpha = 0.2, aes(color = ctrl)) +
#scale_color_manual(values=c("#E69F00", "#999999", "#56B4E9")) +
geom_abline(intercept = 0, slope = 1) +
theme_classic() +
ggtitle(paste0("r (pearson) = ", r %>% round(2))) +
xlab("replicate 1") +
ylab("replicate 2") +
scale_y_continuous(breaks = c(0, 250000, 500000, 750000)) +
coord_fixed() +
ggsave("collab_pearson_raw.pdf", width = 4, height = 4)
# Chunk 15
ctg_loess %>%
mutate(line_date_exp = paste0(line, "_", date)) %>%
ggplot(aes(date, pcount_norm)) +
geom_violin(aes(group = date,  color = date)) +
#geom_jitter(alpha = 0.7) +
geom_boxplot(data = ctg_loess %>% filter(drug == "DMSO"), aes(group = date), width = 0.25) +
facet_grid(line ~ Library) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ctg_loess %>%
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))
ctg_ln <- left_join(ctg_loess, ctg_loess %>%
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))) %>%
mutate(viability = pcount_norm/neg_control_median)
ctg_ln %>%
mutate(line_date_exp = paste0(line, "_", date)) %>%
ggplot(aes(date, viability)) +
geom_violin(aes(group = date,  color = date)) +
#geom_jitter(alpha = 0.7) +
geom_boxplot(data = ctg_ln %>% filter(drug == "DMSO"), aes(group = date), width = 0.25) +
facet_grid(line ~ Library) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
r <- ctg_ln %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, viability, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, viability) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
dplyr::select(rep1, rep2) %>%
as.matrix() %>%
cor() %>%
.["rep1", "rep2"]
ctg_ln %>%
#filter(col_num != 13) %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, viability, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, viability) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
ggplot(aes(rep1, rep2)) +
geom_point(alpha = 0.2) +
#geom_point(alpha = 0.2, aes(color = ctrl)) +
#scale_color_manual(values=c("#E69F00", "#999999", "#56B4E9")) +
geom_abline(intercept = 0, slope = 1) +
theme_classic() +
ggtitle(paste0("r (pearson) = ", r %>% round(2))) +
xlab("replicate 1") +
ylab("replicate 2") +
scale_y_continuous(breaks = c(0, 0.5, 1, 1.5)) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
coord_fixed() +
ggsave("collab_pearson_norm.pdf", width = 4, height = 4)
left_join(ctg_loess, ctg_loess %>%
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE)))
ctg_loess %>%
dplyr::select(id, drug, pcount_norm)
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))) %>%
mutate(viability = pcount_norm/neg_control_median)
ctg_loess %>%
dplyr::select(id, drug, pcount_norm)
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))
ctg_loess %>%
dplyr::select(id, drug, pcount_norm) %>%
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))
ctg_ln <- left_join(ctg_loess, ctg_loess %>%
dplyr::select(id, drug, pcount_norm) %>%
filter(drug == "DMSO") %>% group_by(id) %>%
mutate(neg_control_median = median(pcount_norm, na.rm = TRUE))) %>%
mutate(viability = pcount_norm/neg_control_median)
ctg_ln %>%
mutate(line_date_exp = paste0(line, "_", date)) %>%
ggplot(aes(date, viability)) +
geom_violin(aes(group = date,  color = date)) +
#geom_jitter(alpha = 0.7) +
geom_boxplot(data = ctg_ln %>% filter(drug == "DMSO"), aes(group = date), width = 0.25) +
facet_grid(line ~ Library) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ctg_ln %>% View
ctg_loess %>%
dplyr::select(id, drug, pcount_norm) %>%
filter(drug == "DMSO") %>% group_by(id) %>%
summarise(neg_control_median = median(pcount_norm, na.rm = TRUE))
ctg_ln <- left_join(ctg_loess, ctg_loess %>%
dplyr::select(id, drug, pcount_norm) %>%
filter(drug == "DMSO") %>% group_by(id) %>%
summarise(neg_control_median = median(pcount_norm, na.rm = TRUE))) %>%
mutate(viability = pcount_norm/neg_control_median)
ctg_ln %>%
mutate(line_date_exp = paste0(line, "_", date)) %>%
ggplot(aes(date, viability)) +
geom_violin(aes(group = date,  color = date)) +
#geom_jitter(alpha = 0.7) +
geom_boxplot(data = ctg_ln %>% filter(drug == "DMSO"), aes(group = date), width = 0.25) +
facet_grid(line ~ Library) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
r <- ctg_ln %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, viability, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, viability) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
dplyr::select(rep1, rep2) %>%
as.matrix() %>%
cor() %>%
.["rep1", "rep2"]
ctg_ln %>%
#filter(col_num != 13) %>%
mutate(ctrl = ifelse(drug == "DMSO", "negative", "none")) %>%
mutate(ctrl = ifelse(drug == "Staurosporine", "positive", ctrl)) %>%
#filter(drug %in% coi) %>%
dplyr::select(line, Library, date, viability, well, ctrl) %>%
unite(id, c("line", "Library", "well")) %>%
spread(date, viability) %>%
rename(rep1 = `180320`) %>%
rename(rep2 = `180327`) %>%
ggplot(aes(rep1, rep2)) +
geom_point(alpha = 0.2) +
#geom_point(alpha = 0.2, aes(color = ctrl)) +
#scale_color_manual(values=c("#E69F00", "#999999", "#56B4E9")) +
geom_abline(intercept = 0, slope = 1) +
theme_classic() +
ggtitle(paste0("r (pearson) = ", r %>% round(2))) +
xlab("replicate 1") +
ylab("replicate 2") +
scale_y_continuous(breaks = c(0, 0.5, 1, 1.5)) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
coord_fixed() +
ggsave("collab_pearson_norm.pdf", width = 4, height = 4)
coi <- c("DMSO", "Staurosporine")
ctg_ln %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, viability)) +
geom_boxplot(aes(colour = drug), width =1, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count")
coi <- c("DMSO", "Staurosporine")
ctg_ln %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, viability)) +
geom_boxplot(aes(colour = drug), width = 0.5, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count") +
ggsave("collab_ctrls_norm_byplate_uncombined.pdf", width = 6, height = 4)
ctg_loess %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, pcount_norm)) +
geom_boxplot(aes(colour = drug), width =.2, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.y=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggsave("collab_ctrls_raw_byplate_uncombined.pdf", width = 6, height = 4)
ctg_ln %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, pcount_norm)) +
geom_boxplot(aes(colour = drug), width =.2, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.y=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggsave("collab_ctrls_norm_byplate_uncombined.pdf", width = 6, height = 4)
ctg_ln %>%
filter(drug %in% coi & combination == FALSE) %>%
ggplot(aes(id, viability)) +
geom_boxplot(aes(colour = drug), width =.2, position = "identity") +
theme_classic() +
#facet_grid(line~date) +
#scale_y_continuous(limits = c(-1,250000)) +
#ggtitle("Before DMSO normalization") +
theme(axis.title.y=element_blank()) +
scale_color_manual(values=rev(c("#999999", "#000000"))) +
ylab("Photon count") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggsave("collab_ctrls_norm_byplate_uncombined.pdf", width = 6, height = 4)
coi <- c("DMSO", "Staurosporine")
ctg_ln %>%
filter(!drug %in% coi)
ctg_ln %>%
filter(!drug %in% coi) %>% colnames()
25/(5^(as.numeric(3)-1))
25/(5^(as.numeric(4)-1))
25/(5^(as.numeric(1)-1))
25/(5^(as.numeric(2)-1))
25/(5^(as.numeric(5)-1))
syn_drug <- ctg_ln %>%
filter(!drug %in% coi) %>%
#filter(query != "L11DM") %>%
#filter(combination == TRUE) %>%
rename(rv = viability) %>%
#setup the easy stuff
dplyr::transmute(
#BlockID = paste(query, drug, sep = "_"),
Response = rv*100,
Replicate = ifelse(date == "180320", 1, 2),
DrugRow = DrugRow,
DrugCol = DrugCol,
#build matrix
Col = Col,
Row = Row,
#define concentrations
ConcRow = ifelse(Row == 6, 0, 25/(5^(as.numeric(Row)-1))), #assuming the initila concentration is 50
ConcCol = ifelse(Col == 6, 0, 25/(5^(as.numeric(Col)-1))),
ConcUnit = "uM",
line = line,
BlockID = BlockID
) #%>% mutate(BlockID = paste(query, drug, sep = "_"))
syn_drug
syn_drug %>% View
syn_drug %>% distinct() %>% View
syn_drug %>% filter(BlockID == "CD")
syn_drug %>% filter(BlockID == "CD", Col = 6) %>%
syn_drug %>% filter(BlockID == "CD", Col == 6)
syn_drug %>% filter(BlockID == "CD" & Col == 6)
syn_drug %>% filter(BlockID == "CD" & Col == 6)  %>% View
syn_drug <- ctg_ln %>%
#filter(!drug %in% coi) %>%
#filter(query != "L11DM") %>%
#filter(combination == TRUE) %>%
rename(rv = viability) %>%
#setup the easy stuff
dplyr::transmute(
#BlockID = paste(query, drug, sep = "_"),
Response = rv*100,
Replicate = ifelse(date == "180320", 1, 2),
DrugRow = DrugRow,
DrugCol = DrugCol,
#build matrix
Col = Col,
Row = Row,
#define concentrations
ConcRow = ifelse(Row == 6, 0, 25/(5^(as.numeric(Row)-1))), #assuming the initila concentration is 50
ConcCol = ifelse(Col == 6, 0, 25/(5^(as.numeric(Col)-1))),
ConcUnit = "uM",
line = line,
BlockID = BlockID
) #%>% mutate(BlockID = paste(query, drug, sep = "_"))
syn_drug %>% filter(BlockID == "CD" & Col == 6)  %>% View
syn_drug %>% View
ctg_ln %>% View
coi <- c("Staurosporine")
syn_drug <- ctg_ln %>%
filter(!drug %in% coi) %>%
#filter(query != "L11DM") %>%
#filter(combination == TRUE) %>%
rename(rv = viability) %>%
#setup the easy stuff
dplyr::transmute(
#BlockID = paste(query, drug, sep = "_"),
Response = rv*100,
Replicate = ifelse(date == "180320", 1, 2),
DrugRow = DrugRow,
DrugCol = DrugCol,
#build matrix
Col = Col,
Row = Row,
#define concentrations
ConcRow = ifelse(Row == 6, 0, 25/(5^(as.numeric(Row)-1))), #assuming the initila concentration is 50
ConcCol = ifelse(Col == 6, 0, 25/(5^(as.numeric(Col)-1))),
ConcUnit = "uM",
line = line,
BlockID = BlockID
) #%>% mutate(BlockID = paste(query, drug, sep = "_"))
syn_drug %>% dim()
syn_drug %>% View
syn_drug %>% filter(is.na(BlockID))
syn_drug %>% filter(is.na(BlockID)) %>%
group_by(DrugRow, Row, Replicate, line, DrugCol, Col, ConcRow, ConcCol, ConcUnit) %>%
summarise(Response = mean(Response, na.rm = TRUE))
coi <- c("Staurosporine", "DMSO")
syn_drug <- ctg_ln %>%
filter(!drug %in% coi) %>%
#filter(query != "L11DM") %>%
#filter(combination == TRUE) %>%
rename(rv = viability) %>%
#setup the easy stuff
dplyr::transmute(
#BlockID = paste(query, drug, sep = "_"),
Response = rv*100,
Replicate = ifelse(date == "180320", 1, 2),
DrugRow = DrugRow,
DrugCol = DrugCol,
#build matrix
Col = Col,
Row = Row,
#define concentrations
ConcRow = ifelse(Row == 6, 0, 25/(5^(as.numeric(Row)-1))), #assuming the initila concentration is 50
ConcCol = ifelse(Col == 6, 0, 25/(5^(as.numeric(Col)-1))),
ConcUnit = "uM",
line = line,
BlockID = BlockID
) #%>% mutate(BlockID = paste(query, drug, sep = "_"))
tidy_synergy = function(df, me){ lapply(as.list(me), function(m, f = df){
#hacky way of ignoring cases in which the synergy scores could not be calculated
return(tryCatch(f %>%
ReshapeData(., data.type = "viability") %>%
#PlotDoseResponse() %>%
CalculateSynergy(method = m, correction = TRUE) %>%
tibble(BlockID = .$drug.pairs %>% simplify() %>% .[4],
method = .$method,
score_average = .$scores %>% .[[1]] %>% .[-1,-1] %>% simplify() %>% mean(),
score_sd = .$scores %>% .[[1]] %>% .[-1,-1] %>% simplify() %>% sd()) %>%
select(BlockID, method, score_average, score_sd) %>% distinct(),
error=function(e) NULL))}
) %>% bind_rows()
#PlotSynergy(type = "all")
}
collab_syn <- syn_drug %>%  group_by(line, Replicate , BlockID) %>%
do(tidy_synergy(df = ., me = c("ZIP", "HSA", "Bliss", "Loewe"))) %>%
ungroup() %>%
#complete the df for scores that could not be calculated
mutate(method = as.factor(method),
line = as.factor(line)) %>%
complete(BlockID, method, Replicate, line) %>%
mutate(score_average = ifelse(is.nan(score_average), NA, score_average))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
# Set some global knitr options
library("knitr")
opts_chunk$set(tidy=TRUE, tidy.opts=list(blank=FALSE, width.cutoff=60), cache=TRUE, messages=FALSE)
syn_mat %>% filter(line == "07", BlockID == boi, Replicate == 1) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
boi = c("AB")
moi = "ZIP"
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>%
ReshapeData(., data.type = "viability")
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% View
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID) %>% summarise(Response = mean(Response))
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response))
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_mat %>% filter(line == "07", BlockID == boi, Replicate == 1) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
boi = c("TAS-102_Bosutinib")
moi = "ZIP"
syn_mat %>% filter(line == "07", BlockID == boi, Replicate == 1) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
boi = c("AB")
moi = "ZIP"
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
syn_drug %>% filter(line == "D007T01", BlockID == boi, Replicate == 1) %>% group_by(Replicate, Col, Row, line, BlockID, DrugRow, DrugCol, ConcRow, ConcCol, ConcUnit) %>% summarise(Response = mean(Response)) %>%
ReshapeData(., data.type = "viability") %>%
CalculateSynergy(method = "ZIP", correction = TRUE) %>%
PlotSynergy(type = "all", save.file = FALSE)
